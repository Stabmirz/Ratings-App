{"version":3,"sources":["components/Text.js","components/CountrySelector.js","components/Ratings.js","components/Review.js","App.js","serviceWorker.js","index.js"],"names":["Text","className","CountrySelector","props","country","this","value","defaultOptionLabel","onChange","val","changeHandler","Component","initialState","quality","design","experience","productStandouts","age","reason","errors","isSubmitted","Ratings","handleChange","event","target","name","state","console","log","setState","handleSubmit","preventDefault","length","ratingsData","rref","reset","alert","Fragment","onSubmit","ref","type","id","htmlFor","title","style","fontWeight","review","rating","recommendation","isAgreed","Review","parseInt","handleValidation","Rating","size","placeholder","onBlur","rows","href","rel","aria-hidden","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e4925bd.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Rating.css\";\n\nexport default function Text() {\n    return (\n        <div className=\"rating-text\">\n            <span>Poor</span>\n            <span>Excellent</span>\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\nimport { CountryDropdown} from 'react-country-region-selector';\n\n\nclass CountrySelector extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    let {country} = this.props;\n    return (\n      <div>\n        <CountryDropdown\n          value={country}\n          defaultOptionLabel=\"Australia\"\n          onChange={(val) => this.props.changeHandler(val)} />\n      </div>\n    );\n  }\n}\n\nexport default CountrySelector;","import React, { Component } from 'react';\nimport Text from './Text';\nimport Review from './Review';\nimport CountrySelector from './CountrySelector';\nimport \"./Rating.css\";\n\nconst initialState = {\n    quality: \"\",\n    design:\"\",\n    experience: \"\",\n    productStandouts:\"\",\n    age:\"\",\n    reason:\"\",\n    country:\"\",\n    errors: {\n        quality: \"\",\n        design:\"\",\n        experience: \"\",\n        age:\"\",\n        reason:\"\",\n        isSubmitted:false,\n    },\n};\n\nclass Ratings extends Component {\n    constructor() {\n        super();\n        this.state = {\n          ...initialState,\n        };\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n        errors[name]=\"\";\n        console.log(this.state);\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    changeHandler = (val) => {\n        this.setState({\n           country: val,\n        });\n        console.log(this.state);\n    };\n\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n    \n        let {quality,design,experience,age,reason} = this.state;\n        let errors = this.state.errors;\n        \n        // check if any required field is left empty and show error message\n\n        errors.quality = quality.length===0 ? \"Please select a rating!\" : \"\";\n        errors.design = design.length===0 ? \"Please select a rating!\" : \"\";\n        errors.experience = experience.length===0 ? \"Please select a rating!\" : \"\";\n        errors.age = age.length===0 ? \"Please select an answer!\" : \"\";\n        errors.reason = reason.length===0 ? \"Please select an answer!\" : \"\";\n    \n        this.setState({\n          errors,\n        });\n    \n        // submit the form after checking the form validation\n        if (\n            quality.length > 0 &&\n            design.length > 0 &&\n            experience.length > 0 &&\n            age.length > 0 &&\n            reason.length > 0 \n        ) \n        {\n    \n         // recent submited data\n         console.log(this.state);\n        \n        // saving data in an object \n        const ratingsData = {\n            quality: this.state.quality,\n            design:this.state.design,\n            experience:this.state.experience,\n            productStandouts:this.state.productStandouts,\n            age:this.state.age,\n            reason:this.state.reason,\n            country:this.state.country\n        }\n      \n          console.log(ratingsData);\n        \n          // call api to add data in the database\n        //   axios.post('http://api/add', ratingsData)\n        //     .then(res => console.log(res.data));\n      \n        \n          //empty form input \n          this.rref.reset();\n          this.setState({\n            ...initialState,\n            isSubmitted: true\n          });\n\n          alert(\"Thank You. Your Review has been submitted successfully :)\")\n    \n        }\n      };\n\n    render() { \n        const { errors } = this.state;\n        return ( \n            <React.Fragment>\n            {!this.state.isSubmitted &&\n                <div>\n                    <header className=\"header margin-medium\">\n                        <h1 className=\"margin-small\">\n                            1815 Rose Gold Chronograph Watch - Brown Croco Strap\n                        </h1>\n                        <h2 className=\"margin-small\">Ratings</h2>\n                    </header>\n                    <div className=\"main-container\">\n                        <form onSubmit={this.handleSubmit} ref={(ref) => (this.rref = ref)}>\n                            <div className=\"container\">\n                                <div className=\"rating-container margin-medium\">\n                                    <span className={(this.state.errors.quality.length > 0 ? \"empty-field\" : \"\")}>Quality</span>\n                                    <div className=\"rating\">\n                                        <fieldset>\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"q5\" name=\"quality\" value=\"5\" />\n                                            <label htmlFor=\"q5\" title=\"Outstanding\">5</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"q4\" name=\"quality\" value=\"4\" />\n                                            <label htmlFor=\"q4\" title=\"Very Good\">4</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"q3\" name=\"quality\" value=\"3\" />\n                                            <label htmlFor=\"q3\" title=\"Good\">3</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"q2\" name=\"quality\" value=\"2\" />\n                                            <label htmlFor=\"q2\" title=\"Poor\">2</label>\n                                            <div className=\"hr-line\"></div>\n                                            \n                                            <input type=\"radio\" onChange={this.handleChange} id=\"q1\" name=\"quality\" value=\"1\" />\n                                            <label htmlFor=\"q1\" title=\"Very Poor\">1</label>\n                                        </fieldset>\n                                    </div>\n                                    <Text/>\n                                    {errors.quality.length > 0 && (<span className=\"error\">{errors.quality}</span>)}\n                                </div>\n                                <div className=\"rating-container margin-medium\">\n                                    <span className={(this.state.errors.design.length > 0 ? \"empty-field\" : \"\")}>Design</span>\n                                    <div className=\"rating\">\n                                        <fieldset>\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"d5\" name=\"design\" value=\"5\" />\n                                            <label htmlFor=\"d5\" title=\"Outstanding\">5</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"d4\" name=\"design\" value=\"4\" />\n                                            <label htmlFor=\"d4\" title=\"Very Good\">4</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"d3\" name=\"design\" value=\"3\" />\n                                            <label htmlFor=\"d3\" title=\"Good\">3</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"d2\" name=\"design\" value=\"2\" />\n                                            <label htmlFor=\"d2\" title=\"Poor\">2</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"d1\" name=\"design\" value=\"1\" />\n                                            <label htmlFor=\"d1\" title=\"Very Poor\">1</label>\n                                        </fieldset>\n                                    </div>\n                                    <Text/>\n                                    {errors.design.length > 0 && (<span className=\"error\">{errors.design}</span>)}\n                                </div>\n\n                                <div className=\"rating-container margin-large\">\n                                    <span className={(this.state.errors.experience.length > 0 ? \"empty-field\" : \"\")}>Experience</span>\n                                    <div className=\"rating\">\n                                        <fieldset>\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"e5\" name=\"experience\" value=\"5\" />\n                                            <label htmlFor=\"e5\" title=\"Outstanding\">5</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"e4\" name=\"experience\" value=\"4\" />\n                                            <label htmlFor=\"e4\" title=\"Very Good\">4</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"e3\" name=\"experience\" value=\"3\" />\n                                            <label htmlFor=\"e3\" title=\"Good\">3</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"e2\" name=\"experience\" value=\"2\" />\n                                            <label htmlFor=\"e2\" title=\"Poor\">2</label>\n                                            <div className=\"hr-line\"></div>\n\n                                            <input type=\"radio\" onChange={this.handleChange} id=\"e1\" name=\"experience\" value=\"1\" />\n                                            <label htmlFor=\"e1\" title=\"Very Poor\">1</label>\n                                        </fieldset>\n                                    </div>\n                                    <Text/>\n                                    {errors.experience.length > 0 && (<span className=\"error\">{errors.experience}</span>)}\n                                </div>\n                                <div className=\"product margin-large\">\n                                    <span>Product Standouts</span>\n                                    <span className=\"margin-small\">Choose up to 5 that best apply (optional)</span>\n                                    <div className=\"product-rating\">\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"accurate-timekeeping\"name=\"productStandouts\" value=\"Accurate Timekeeping\" />\n                                        <label htmlFor=\"accurate-timekeeping\" className=\"productRatingLabel\">Accurate Timekeeping</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"high-quality\" name=\"productStandouts\" value=\"High Quality\" />\n                                        <label htmlFor=\"high-quality\" className=\"productRatingLabel\">High Quality</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"durable\"name=\"productStandouts\" value=\"Durable\" />\n                                        <label htmlFor=\"durable\" className=\"productRatingLabel\">Durable</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"elegant\"name=\"productStandouts\" value=\"Elegant\"/>\n                                        <label htmlFor=\"elegant\" className=\"productRatingLabel\">Elegant</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"good-weight\"name=\"productStandouts\" value=\"Good Weight\" />\n                                        <label htmlFor=\"good-weight\" className=\"productRatingLabel\">Good Weight</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"versatile\"name=\"productStandouts\" value=\"Versatile\" />\n                                        <label htmlFor=\"versatile\" className=\"productRatingLabel\">Versatile</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"looks-expensive\"name=\"productStandouts\" value=\"Looks Expensive\" />\n                                        <label htmlFor=\"looks-expensive\" className=\"productRatingLabel\">Looks Expensive</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"attracts-compliments\"name=\"productStandouts\" value=\"Attracts Compliments\" />\n                                        <label htmlFor=\"attracts-compliments\" className=\"productRatingLabel\">Attracts Compliments</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"unique\"name=\"productStandouts\" value=\"Unique\" />\n                                        <label htmlFor=\"unique\" className=\"productRatingLabel\">Unique</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"great-gift\"name=\"productStandouts\" value=\"Great Gift\" />\n                                        <label htmlFor=\"great-gift\" className=\"productRatingLabel\">Great Gift</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"great-value\"name=\"productStandouts\" value=\"Great Value\" />\n                                        <label htmlFor=\"great-value\" className=\"productRatingLabel\">Great Value</label>\n                                    </div>\n\n                                </div>\n                                \n                                <div className=\"about margin-small\">\n                                    <span style={{fontWeight:\"600\"}} className=\"margin-small\">About You</span>\n                                    <span className={(this.state.errors.age.length > 0 ? \"empty-field\" : \"\")}>Age range</span>\n                                    <span className=\"margin-small\">Choose <strong>one</strong></span>\n                                    <div className=\"age-groups\">\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup1\" name=\"age\" value=\"Under 18\" />\n                                        <label htmlFor=\"ageGroup1\" className=\"ageGroupLabel\">Under 18</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup2\" name=\"age\" value=\"18 - 24\" />\n                                        <label htmlFor=\"ageGroup2\" className=\"ageGroupLabel\">18 - 24</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup3\" name=\"age\" value=\"25 - 34\" />\n                                        <label htmlFor=\"ageGroup3\" className=\"ageGroupLabel\">25 - 34</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup4\" name=\"age\" value=\"35 - 44\"/>\n                                        <label htmlFor=\"ageGroup4\" className=\"ageGroupLabel\">35 - 44</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup5\" name=\"age\" value=\"45 - 54\" />\n                                        <label htmlFor=\"ageGroup5\" className=\"ageGroupLabel\">45 - 54</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup6\" name=\"age\" value=\"55 - 64\" />\n                                        <label htmlFor=\"ageGroup6\" className=\"ageGroupLabel\">55 - 64</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"ageGroup7\" name=\"age\" value=\" 65+\" />\n                                        <label htmlFor=\"ageGroup7\" className=\"ageGroupLabel\"> 65+</label>\n                                    </div>\n                                    {errors.age.length > 0 && (<span className=\"error\">{errors.age}</span>)}\n\n                                </div>\n                                <div className=\"boughtFor margin-small\">\n                                    <span className={(this.state.errors.reason.length > 0 ? \"empty-field\" : \"\")}>Bought For</span>\n                                    <span className=\"margin-small\">Choose <strong>one</strong></span>\n                                    <div className=\"buying-reasons\">\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"buyingReason1\" name=\"reason\" value=\"Personal Use\" />\n                                        <label htmlFor=\"buyingReason1\" className=\"buyingReasonLabel\">Personal Use</label>\n\n                                        <input type=\"radio\" onChange={this.handleChange} id=\"buyingReason2\" name=\"reason\" value=\"Gift\" />\n                                        <label htmlFor=\"buyingReason2\" className=\"buyingReasonLabel\">Gift</label>\n                                    </div>\n                                    {errors.reason.length > 0 && (<span className=\"error\">{errors.reason}</span>)}\n                                </div>\n\n                                <span className=\"margin-small\">Country</span>\n                                <CountrySelector country={this.state.country} changeHandler= {this.changeHandler}/>\n                            </div>\n\n                            <footer className=\"next\">  \n                                <div className=\"submit\">\n                                <button className=\"btn agree\">Next</button>\n                                </div>\n                            </footer>\n                        </form>\n                    </div>\n                </div>\n            }\n            {this.state.isSubmitted && <Review/>}\n            </React.Fragment>\n        );\n    }\n}\n \nexport default Ratings;","import React, { Component } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Ratings from \"./Ratings\";\nimport \"./Review.css\";\n\n\n\nconst initialState = {\n  title: \"\",\n  review: \"\",\n  rating: 0,\n  recommendation: \"\",\n  errors: {\n    title: \"\",\n    review: \"\",\n    rating: 0,\n    recommendation: \"\",\n  },\n  isAgreed:false,\n};\n\nclass Review extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(this.state);\n    if(name === \"rating\") {\n      this.setState({\n        [name]: parseInt(event.target.value),\n      });\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n        this.handleValidation(event);\n  };\n\n  handleValidation = (event) => {\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    // show error message for empty input field \n    switch (name) {\n      case \"title\":\n        errors.title = value.length < 1 ? \"Please enter a title!\" : \"\";\n        break;\n      case \"review\":\n        errors.review = value.length < 1 ? \"Please enter a review\" : \"\";\n        break;\n      case \"rating\":\n        errors.rating = value.length < 1 ? \"Please select a rating\" : \"\";\n        break;\n      case \"recommendation\":\n        errors.recommendation = value.length <1 ? \"Please select a recommendation\" : \"\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      errors,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    let { title, review, rating, recommendation } = this.state;\n    let errors = this.state.errors;\n    \n    // check if any required field is left empty and show error message\n    errors.rating = rating === 0 ? \"Please select a rating\" : \"\";\n    errors.title = title.length === 0 ? \"Please enter a title!\" : \"\";\n    errors.review = review.length === 0 ? \"Please enter a review\" : \"\";\n    errors.recommendation = recommendation.length === 0 ? \"Please select a recommendation\" : \"\";\n\n    this.setState({\n      errors,\n    });\n\n    // submit the form after checking the form validation\n    if (\n      rating !== 0 &&\n      title.length > 0 &&\n      review.length > 0 &&\n      recommendation.length > 0\n    ) {\n\n     // recent submited data\n     console.log(this.state);\n\n      //empty form input \n      this.rref.reset();\n      this.setState({\n        ...initialState,\n        isAgreed: true\n      });\n\n    }\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <React.Fragment>\n        {!this.state.isAgreed &&\n        <div>\n          <header className=\"header margin-medium\">\n            <h1 className=\"margin-small\">\n              1815 Rose Gold Chronograph Watch - Brown Croco Strap\n            </h1>\n            <h2 className=\"margin-small\">Review</h2>\n          </header>\n          <div className=\"main-container\">\n            <form onSubmit={this.handleSubmit} ref={(ref) => (this.rref = ref)}>\n              <div className=\"container\">\n                <div className=\"form-group margin-medium\">\n                  <div>\n                    <span\n                      className={\n                        (this.state.errors.rating.length > 0 ? \"empty-field\" : \"\")\n                      }\n                    >\n                      Your Rating\n                    </span>\n                    <br />\n                    <Rating\n                      name=\"rating\"\n                      className=\"stars\"\n                      size=\"large\"\n                      value={this.state.rating}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  {errors.rating.length > 0 && (\n                    <span className=\"error\">{errors.rating}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group margin-medium\">\n                  <div className=\"input-field\">\n                    <input\n                      type=\"text\"\n                      name=\"title\"\n                      value={this.state.title}\n                      onChange={this.handleChange}\n                      className={\n                        \"form-control \" +\n                        (this.state.errors.title.length > 0 ? \"empty-field\" : \"\")\n                      }\n                      id=\"title\"\n                      placeholder=\"Summary of your experience\"\n                      onBlur={this.handleValidation}\n                    />\n                    <label htmlFor=\"title\">Review Title</label>\n                  </div>\n                  {errors.title.length > 0 && (\n                    <span className=\"error\">{errors.title}</span>\n                  )}\n                </div>\n\n                <div className=\"form-group margin-medium\">\n                  <div className=\"input-field\">\n                    <textarea\n                      name=\"review\"\n                      onChange={this.handleChange}\n                      value={this.state.review}\n                      className={\n                        \"form-control \" +\n                        (this.state.errors.review.length > 0 ? \"empty-field\" : \"\")\n                      }\n                      id=\"review\"\n                      placeholder=\"Give us some details about what you liked and disliked about the product\"\n                      rows=\"3\"\n                      onBlur={this.handleValidation}\n                    >\n                    </textarea>\n                    <label htmlFor=\"review\">Your Review</label>\n                  </div>\n                  {errors.review.length > 0 && (\n                    <span className=\"error\">{errors.review}</span>\n                  )}\n                </div>\n\n                <div className=\"radio-group\">\n                  <p\n                    className={\n                      \"margin-small \" +\n                      (this.state.errors.recommendation.length > 0\n                        ? \"empty-field\"\n                        : \"\"\n                      )\n                    }\n                  >\n                    Would you recommend this product?\n                  </p>\n                  <div>\n                    <input\n                      type=\"radio\"\n                      id=\"yes\"\n                      name=\"recommendation\"\n                      onChange={this.handleChange}\n                      value=\"yes\"\n                    />\n                    <label htmlFor=\"yes\" className=\"radioButtonLabel\">\n                      <span>YES</span>\n                    </label>\n\n                    <input\n                      type=\"radio\"\n                      id=\"no\"\n                      name=\"recommendation\"\n                      onChange={this.handleChange}\n                      value=\"no\"\n                    />\n                    <label htmlFor=\"no\" className=\"radioButtonLabel no\">\n                      <span>NO</span>\n                    </label>\n                  </div>\n                  {errors.recommendation.length > 0 && (\n                    <span className=\"error\">{errors.recommendation}</span>\n                  )}\n                </div>\n\n              </div>\n              <footer>\n                <div className=\"terms margin-small\">\n                  <span>By continuing you agree to our </span>\n                  <a href=\"https://www.okendo.io/end-user-terms/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    <span>Terms and Conditions </span>\n                    <i className=\"fa fa-external-link\" aria-hidden=\"true\"></i>\n                  </a>\n                  <span>, and </span>\n                  <a href=\"https://www.okendo.io/privacy-policy/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    <span>Privacy Policy </span>\n                    <i className=\"fa fa-external-link\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n\n                <div className=\"submit\">\n                  <button className=\"btn agree\">Agree & Continue</button>\n                </div>\n              </footer>\n            </form>\n          </div>\n        </div>\n        }\n        {this.state.isAgreed && <Ratings/>}\n      </React.Fragment>\n    );\n  }\n}\nexport default Review;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport Review from \"./components/Review\";\n\nfunction App() {\n  return (\n    <Review />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}